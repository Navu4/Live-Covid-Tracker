{"version":3,"sources":["components/card/card.js","components/covid/covid.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","info","useState","data","setdata","getCovidData","a","fetch","res","json","actualData","console","log","statewise","useEffect","className","recovered","confirmed","deaths","active","lastupdatedtime","Covid","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRA0EeA,EAvEF,SAACC,EAAMC,GAClB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAY,uCAAG,8BAAAC,EAAA,+EAECC,MAAM,0CAFP,cAEXC,EAFW,gBAGQA,EAAIC,OAHZ,OAGXC,EAHW,OAIjBC,QAAQC,IAAIF,EAAWG,UAAU,IACjCT,EAAQM,EAAWG,UAAU,IALZ,kDAOjBF,QAAQC,IAAR,MAPiB,0DAAH,qDAelB,OAJAE,qBAAU,WACRT,MACC,IAGD,qCACE,qBAAKU,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,uCADF,cAGA,mBAAGA,UAAU,wBAAb,wBAGJ,qBAAKA,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,yCADF,gBAGA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKa,iBAG/C,qBAAKD,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,yCADF,iBAGA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKc,iBAG/C,qBAAKF,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,yCADF,aAGA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKe,cAG/C,qBAAKH,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,yCADF,aAGA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKgB,cAExC,IACP,qBAAKJ,UAAU,cAAf,SACE,sBAAKA,UAAU,aAAf,UACE,oBAAGA,UAAU,YAAb,UACE,wCADF,cAGA,mBAAGA,UAAU,wBAAb,SAAsCZ,EAAKiB,2BC3CtCC,G,MApBD,WAEV,OACI,mCACE,oCAEE,sBAAKN,UAAU,oBAAf,UACI,oBAAKA,UAAU,OAAf,gCACA,2DAGJ,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,aCLDO,EARH,WACR,OACI,mCACI,cAAC,EAAD,OCMGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c36cdaae.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './card.css';\r\n\r\nconst Card = (name, info) => {\r\n  const [data, setdata] = useState([]);\r\n  const getCovidData = async () => {\r\n    try {\r\n      const res = await fetch('https://api.covid19india.org/data.json');\r\n      const actualData = await res.json();\r\n      console.log(actualData.statewise[0]);\r\n      setdata(actualData.statewise[0]);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCovidData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card card_1\">\r\n        <div className=\"card_inner\">\r\n          <p className=\"card_name\">\r\n            <span>OUR</span> COUNTRY\r\n          </p>\r\n          <p className=\"card_total card_small\">INDIA</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"card card_2\">\r\n        <div className=\"card_inner\">\r\n          <p className=\"card_name\">\r\n            <span>TOTAL</span> RECOVERED\r\n          </p>\r\n          <p className=\"card_total card_small\">{data.recovered}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"card card_3\">\r\n        <div className=\"card_inner\">\r\n          <p className=\"card_name\">\r\n            <span>TOTAL</span> CONFIRTMED\r\n          </p>\r\n          <p className=\"card_total card_small\">{data.confirmed}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"card card_4\">\r\n        <div className=\"card_inner\">\r\n          <p className=\"card_name\">\r\n            <span>TOTAL</span> DEATHS\r\n          </p>\r\n          <p className=\"card_total card_small\">{data.deaths}</p>\r\n        </div>\r\n      </div>\r\n      <div className=\"card card_5\">\r\n        <div className=\"card_inner\">\r\n          <p className=\"card_name\">\r\n            <span>TOTAL</span> ACTIVE\r\n          </p>\r\n          <p className=\"card_total card_small\">{data.active}</p>\r\n        </div>\r\n      </div>{' '}\r\n      <div className=\"card card_6\">\r\n        <div className=\"card_inner\">\r\n          <p className=\"card_name\">\r\n            <span>LAST</span> UPDATED\r\n          </p>\r\n          <p className=\"card_total card_small\">{data.lastupdatedtime}</p>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react'\r\nimport Card from '../card/card';\r\nimport './covid.css';\r\n\r\nconst Covid = () => {\r\n\r\n    return (\r\n        <>\r\n          <section>\r\n\r\n            <div className='heading_container'>\r\n                <h1  className='live'>ðŸ”´ LIVE </h1>\r\n                <h2>COVID-19  CORONAVIRUS </h2>\r\n            </div>\r\n\r\n            <div className='card_list'>\r\n                <Card />\r\n            </div>\r\n          </section>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Covid;\r\n","import React from 'react'\r\nimport Covid from './components/covid/covid'\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n            <Covid />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}